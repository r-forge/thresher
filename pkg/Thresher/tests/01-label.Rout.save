
R version 3.0.0 (2013-04-03) -- "Masked Marvel"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(Thresher)
Loading required package: MASS
Loading required package: colorspace
Loading required package: movMF
Loading required package: ade4

Attaching package: 'ade4'

The following object is masked from 'package:base':

    within

Loading required package: ClassDiscovery
Loading required package: cluster
Loading required package: mclust
Package 'mclust' version 4.0
Loading required package: oompaBase

Attaching package: 'Thresher'

The following object is masked from 'package:ade4':

    scatter

Warning messages:
1: package 'colorspace' was built under R version 3.0.2 
2: package 'movMF' was built under R version 3.0.2 
3: package 'ade4' was built under R version 3.0.1 
4: package 'ClassDiscovery' was built under R version 3.0.1 
5: package 'oompaBase' was built under R version 3.0.1 
> # get saved data
> data(savedSims)
> reap <- vmfMixtures[[5]]
> dset <- reap@data
> labels <- factor(paste("C", predict(reap@fit), sep=""))
> 
> # use a different clustering algorityhm
> hc <- hclust(distanceMatrix(dset, "uncentered"), "average")
> newLabels <- paste("New", cutree(hc, k=3), sep="")
> tab <- table(OLD=labels, NEW=newLabels)
> tab
    NEW
OLD  New1 New2 New3
  C1    0    0    6
  C2    0    2    0
  C3    4    0    0
> 
> # now test the methods
> indices <- labelMatcher(tab)
> tab[indices$ii, indices$jj]
    NEW
OLD  New3 New2 New1
  C1    6    0    0
  C2    0    2    0
  C3    0    0    4
> 
> matchLabels(tab)
    NEW
OLD  New3 New2 New1
  C1    6    0    0
  C2    0    2    0
  C3    0    0    4
> 
> countAgreement(tab)
[1] 12
> 
> labelAccuracy(dset, labels)
               pearson               spearman              euclidean 
             1.0000000              1.0000000              1.0000000 
uncentered correlation       absolute pearson           sqrt pearson 
             1.0000000              0.8333333              1.0000000 
             minkowski                maximum                  weird 
             1.0000000              1.0000000              1.0000000 
> 
> bestMetric(dset, labels)
[1] "pearson"
> 
> proc.time()
   user  system elapsed 
   1.87    0.20    2.06 
