
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("BinaryMatrix")
> data("CML500")
> 
> # remove extra identical feature vectors
> CML500 <- removeDuplicateFeatures(CML500)
> # jacc, pear, manh, euc
> vis1 <- DistanceVis(CML500, "jacc", "mds", K=8)
> vis2 <- DistanceVis(CML500, "sokal", "mds", K=8)
> vis3 <- recolor(vis1, vis2)
> 
> # par(mfrow=c(1,3),  cex=1.5)
> plot(vis1@view[[1]], col=vis1@colv, pch=vis1@symv)
> plot(vis2@view[[1]], col=vis2@colv, pch=vis2@symv)
> plot(vis3@view[[1]], col=vis3@colv, pch=vis3@symv)
> 
> A <- BinaryMatrix:::recoverCluster(vis2@colv, vis2@symv)
> B <- BinaryMatrix:::recoverCluster(vis3@colv, vis3@symv)
> table(A, B)
   B
A     1   2   3   4   5   6   7   8
  1  48   0   0   0   0   0   0   0
  2   0 328   0   0   0   0   0   0
  3   0   0   0  37   0   0   0   0
  4   0   0   0   0  40   0   0   0
  5   0   0   0   0   0   0   1   0
  6   0   0   0   0   0  14   0   0
  7   0   0   0   0   0   0   0   1
  8   0   0   1   0   0   0   0   0
> X <- BinaryMatrix:::recoverCluster(vis1@colv, vis1@symv)
> table(A, X)
   X
A     1   2   3   4   5   6   7   8
  1  39   0   1   8   0   0   0   0
  2  29 211  28  16  10  11  12  11
  3   0   0   1  36   0   0   0   0
  4   0   1   3   0  32   0   2   2
  5   0   0   0   0   0   1   0   0
  6   0   0   0   0   0  14   0   0
  7   0   0   0   0   0   1   0   0
  8   0   0   1   0   0   0   0   0
> table(B, X)
   X
B     1   2   3   4   5   6   7   8
  1  39   0   1   8   0   0   0   0
  2  29 211  28  16  10  11  12  11
  3   0   0   1   0   0   0   0   0
  4   0   0   1  36   0   0   0   0
  5   0   1   3   0  32   0   2   2
  6   0   0   0   0   0  14   0   0
  7   0   0   0   0   0   1   0   0
  8   0   0   0   0   0   1   0   0
> 
> proc.time()
   user  system elapsed 
   3.74    0.17    3.93 
